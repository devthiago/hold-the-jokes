{"version":3,"sources":["webpack:///./src/counter.js","webpack:///./src/templates.js","webpack:///./src/github.js","webpack:///./src/index.js"],"names":["counter","date","nextDate","arguments","length","undefined","initial","diff","Date","days","Math","floor","hours","minutes","seconds","reportsTemplate","issue","index","issues","prevIssue","snitchPhoto","snitch","message","_counter","reportTimeTemplate","GITHUB_PARAMS","join","Issue","_classCallCheck","this","_issue","user","login","avatar_url","body","created_at","daysElement","document","getElementById","hoursElement","minutesElement","secondsElement","reportsElement","COUNTER_TIMEOUT_ID","renderCounterValue","selector","value","hasLeftZero","innerHTML","renderCounter","clearTimeout","setTimeout","renderIssues","reports","map","reportsContainerTemplate","window","onload","fetch","GITHUB_API","then","resp","json","data","Array","isArray"],"mappings":"iJAmBeA,EAjBC,SAACC,GAA0B,IAApBC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KAC1BG,EAAUL,GAHc,uBAK1BM,EADQ,IAAIC,KACE,IAAIA,KAAKF,GAW3B,OATMJ,IACJK,EAAQ,IAAIC,KAAKF,GAAa,IAAIE,KAAKN,KAQhCO,KALIC,KAAKC,MAAMJ,QAA+B,GAKxCK,MAJDF,KAAKC,MAAOJ,QAAD,KAAoD,GAIvDM,QAHNH,KAAKC,MAAQJ,QAAD,KAAD,IAAoE,GAGhEO,QAFfJ,KAAKC,MAASJ,QAAD,KAAD,IAAqE,IAAO,KCP7FQ,EAAkB,SAACC,EAAOC,EAAOC,GAC5C,IAAMC,EAAYD,EAAOD,EAAQ,GAEjC,2IAGkBD,EAAMI,YAHxB,4PASuBJ,EAAMK,OAT7B,4FAWqCL,EAAMM,QAX3C,kJARgC,SAACrB,EAAMC,GAAa,IAAAqB,EACVvB,EAAQC,EAAMC,GACxD,OAFoDqB,EAC5Cd,KACR,KAFoDc,EACtCX,MACd,KAFoDW,EAC/BV,QACrB,KAFoDU,EACtBT,QAC9B,IAqBwCU,CAAmBR,EAAMf,KAAQkB,GAAaA,EAAUlB,MDzBlE,wBCU9B,sVCVF,IAEMwB,GAAiB,eAAD,eAAoCC,KAAK,KAEzDC,aACJ,SAAAA,EAAYX,gGAAOY,CAAAC,KAAAF,GACjBE,KAAKC,OAASd,2CAId,OAAOa,KAAKC,OAAOC,KAAKC,0CAIxB,OAAOH,KAAKC,OAAOC,KAAKE,2CAIxB,OAAOJ,KAAKC,OAAOI,kCAInB,OAAOL,KAAKC,OAAOK,oBCjBjBC,EAAcC,SAASC,eAAe,QACtCC,EAAeF,SAASC,eAAe,SACvCE,EAAiBH,SAASC,eAAe,WACzCG,EAAiBJ,SAASC,eAAe,WACzCI,EAAiBL,SAASC,eAAe,WAE3CK,EAAqB,KAGnBC,EAAqB,SAACC,EAAUC,GACrC,IAAMC,EAAoC,KAAtB,GAAGD,GAAQ1C,OAC/ByC,EAASG,UAAYD,MAAkBD,EAAUA,GAG5CG,EAAgB,SAAhBA,EAAiBhD,GAAS,IAAAsB,EACYvB,EAAQC,GAA1CQ,EADsBc,EACtBd,KAAMG,EADgBW,EAChBX,MAAOC,EADSU,EACTV,QAASC,EADAS,EACAT,QAE9B8B,EAAmBR,EAAa3B,GAChCmC,EAAmBL,EAAc3B,GACjCgC,EAAmBJ,EAAgB3B,GACnC+B,EAAmBH,EAAgB3B,GAEnCoC,aAAaP,GACbA,EAAqBQ,WAAW,kBAAMF,EAAchD,IAAO,MAGvDmD,EAAe,SAAClC,GACpB,GAAsB,IAAlBA,EAAOd,OACT,OAAO,KAGT,IAAMiD,EAAUnC,EAAOoC,IAAIvC,GAAiBW,KAAK,IAGjD,OAFAgB,EAAeM,UFHuB,SAACK,GACvC,6EAGQA,EAHR,iCEE2BE,CAAyBF,GAE7CnC,EAAO,GAAGjB,MAGnBuD,OAAOC,OAAS,WDfdC,MAASC,gEAAclC,GACpBmC,KAAK,SAACC,GAAD,OAAUA,EAAKC,SACpBF,KAAK,SAACG,GACL,OAAIC,MAAMC,QAAQF,GACVA,EAAKT,IAAI,SAACtC,GAAD,OAAW,IAAIW,EAAMX,UCavC4C,KAAKR,GACLQ,KAAKX","file":"app.ad3540cb.js","sourcesContent":["export const baseCounterValue = 'sep,26,2018,17:19:00'\n\nconst counter = (date, nextDate = null) => {\n  const initial = date || baseCounterValue\n  const now = new Date()\n  let diff = now - (new Date(initial))\n\n  if (!!nextDate) {\n    diff = (new Date(initial)) - (new Date(nextDate))\n  }\n\n  const days = Math.floor(diff / (60 * 60 * 1000 * 24) * 1)\n  const hours = Math.floor((diff % (60 * 60 * 1000 * 24)) / (60 * 60 * 1000) * 1)\n  const minutes = Math.floor(((diff % (60 * 60 * 1000 * 24)) % (60 * 60 * 1000)) / (60 * 1000) * 1)\n  const seconds = Math.floor((((diff % (60 * 60 * 1000 * 24)) % (60 * 60 * 1000)) % (60 * 1000)) / 1000 * 1)\n\n  return { days, hours, minutes, seconds }\n}\n\nexport default counter","import counter, { baseCounterValue } from './counter.js'\n\nexport const reportTimeTemplate = (date, nextDate) => {\n  const { days, hours, minutes, seconds } = counter(date, nextDate)\n  return `${days}d ${hours}h ${minutes}m ${seconds}s`\n}\n\nexport const reportsTemplate = (issue, index, issues) => {\n  const prevIssue = issues[index + 1];\n\n  return `\n    <div class=\"row comment-box p-1 pt-3 pr-4\">\n      <picture class=\"col-lg-2 col-3 user-img text-center\">\n        <img src=\"${issue.snitchPhoto}\" class=\"main-cmt-img\">\n      </picture>\n      <div class=\"col-lg-10 col-9 user-comment bg-light rounded pb-1\">\n        <div class=\"row\">\n          <div class=\"col-lg-8 col-6 pr-0\">\n            <p class=\"w-100 p-2 m-0\">\n              <strong>@${issue.snitch} says that Thiago said:</strong>\n            </p>\n            <p class=\"w-100 p-2 m-0\">${issue.message}</p>\n          </div>\n          <div class=\"col-lg-4 col-6\">\n            <p class=\"w-100 p-2 m-0\">\n              <span class=\"float-right\">${reportTimeTemplate(issue.date, ((prevIssue && prevIssue.date) || baseCounterValue))}</span>\n            </p>\n          </div>\n        </div>    \n      </div>\n    </div>\n  `\n}\n\nexport const reportsContainerTemplate = (reports) => {\n  return `\n    <div class=\"row issues\">\n      <div class=\"col-12\">\n        ${reports}\n      </div>\n    </div>\n  `\n}","const label = process.env.NODE_ENV === 'development' ? 'testjoke' : 'joke'\nconst GITHUB_API = 'https://api.github.com/repos/devthiago/hold-the-jokes/issues'\nconst GITHUB_PARAMS = ['state=closed', `labels=${label}`].join('&')\n\nclass Issue {\n  constructor(issue) {\n    this._issue = issue;\n  }\n\n  get snitch() {\n    return this._issue.user.login\n  }\n\n  get snitchPhoto() {\n    return this._issue.user.avatar_url\n  }\n\n  get message() {\n    return this._issue.body\n  }\n\n  get date() {\n    return this._issue.created_at\n  }\n}\n\nexport const fetchIssues = () => (\n  fetch(`${GITHUB_API}?${GITHUB_PARAMS}`)\n    .then((resp) => resp.json())\n    .then((data) => {\n      if (Array.isArray(data)) {\n       return data.map((issue) => new Issue(issue))\n      }\n      return []\n    })\n)","import './index.css'\nimport { reportsTemplate, reportsContainerTemplate } from './templates.js'\nimport { fetchIssues } from './github.js'\nimport counter from './counter.js'\n\nconst daysElement = document.getElementById('days')\nconst hoursElement = document.getElementById('hours')\nconst minutesElement = document.getElementById('minutes')\nconst secondsElement = document.getElementById('seconds')\nconst reportsElement = document.getElementById('reports')\n\nlet COUNTER_TIMEOUT_ID = null\nlet POLLING_TIMEOUT_ID = null\n\nconst renderCounterValue = (selector, value) => {\n\tconst hasLeftZero = `${value}`.length === 1\n\tselector.innerHTML = hasLeftZero ? `0${value}` : value\n}\n\nconst renderCounter = (date) => {\n  const { days, hours, minutes, seconds } = counter(date)\n\n  renderCounterValue(daysElement, days)\n  renderCounterValue(hoursElement, hours)\n  renderCounterValue(minutesElement, minutes)\n  renderCounterValue(secondsElement, seconds)\n\n  clearTimeout(COUNTER_TIMEOUT_ID)\n  COUNTER_TIMEOUT_ID = setTimeout(() => renderCounter(date), 1000)\n}\n\nconst renderIssues = (issues) => {\n  if (issues.length === 0) {\n    return null\n  }\n\n  const reports = issues.map(reportsTemplate).join('')\n  reportsElement.innerHTML = reportsContainerTemplate(reports)\n\n  return issues[0].date;\n}\n\nwindow.onload = () => {\n  fetchIssues()\n    .then(renderIssues)\n    .then(renderCounter)\n}\n"],"sourceRoot":""}