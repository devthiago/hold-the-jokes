{"version":3,"sources":["webpack:///./src/index.js","webpack:///./src/count-from.js"],"names":["daysElement","document","getElementById","hoursElement","minutesElement","secondsElement","TIMEOUT_ID","setTimeValue","selector","value","hasLeftZero","length","innerHTML","window","onload","uptime","date","now","Date","countFromDate","diff","Math","floor","clearTimeout","setTimeout"],"mappings":"iJAGMA,EAAcC,SAASC,eAAe,QACtCC,EAAeF,SAASC,eAAe,SACvCE,EAAiBH,SAASC,eAAe,WACzCG,EAAiBJ,SAASC,eAAe,WAE3CI,EAAa,KAEXC,EAAe,SAACC,EAAUC,GAC/B,IAAMC,EAAoC,KAAtB,GAAGD,GAAQE,OAC/BH,EAASI,UAAYF,MAAkBD,EAAUA,GAiBlDI,OAAOC,OAAS,kBAdD,SAATC,EAAUC,GACd,IAAMC,EAAM,IAAIC,KACVC,EAAgB,IAAID,KAAKF,GACzBI,EAAOH,EAAME,EAEnBZ,EAAaP,EAAaqB,KAAKC,MAAMF,QAA+B,IACpEb,EAAaJ,EAAckB,KAAKC,MAAOF,QAAD,KAAoD,IAC1Fb,EAAaH,EAAgBiB,KAAKC,MAAQF,QAAD,KAAD,IAAoE,IAC5Gb,EAAaF,EAAgBgB,KAAKC,MAASF,QAAD,KAAD,IAAqE,IAAO,IAErHG,aAAajB,GACbA,EAAakB,WAAW,kBAAMT,EAAOI,IAAgB,KAGjCJ,CC7BP","file":"app.16b56269.js","sourcesContent":["import './index.css'\nimport countFrom from './count-from.js'\n\nconst daysElement = document.getElementById('days')\nconst hoursElement = document.getElementById('hours')\nconst minutesElement = document.getElementById('minutes')\nconst secondsElement = document.getElementById('seconds')\n\nlet TIMEOUT_ID = null\n\nconst setTimeValue = (selector, value) => {\n\tconst hasLeftZero = `${value}`.length === 1\n\tselector.innerHTML = hasLeftZero ? `0${value}` : value\n}\n\nconst uptime = (date) => {\n  const now = new Date()\n  const countFromDate = new Date(date)\n  const diff = now - countFromDate\n\n  setTimeValue(daysElement, Math.floor(diff / (60 * 60 * 1000 * 24) * 1))\n  setTimeValue(hoursElement, Math.floor((diff % (60 * 60 * 1000 * 24)) / (60 * 60 * 1000) * 1))\n  setTimeValue(minutesElement, Math.floor(((diff % (60 * 60 * 1000 * 24)) % (60 * 60 * 1000)) / (60 * 1000) * 1))\n  setTimeValue(secondsElement, Math.floor((((diff % (60 * 60 * 1000 * 24)) % (60 * 60 * 1000)) % (60 * 1000)) / 1000 * 1))\n\n  clearTimeout(TIMEOUT_ID)\n  TIMEOUT_ID = setTimeout(() => uptime(countFromDate), 1000)\n}\n\nwindow.onload = () => uptime(countFrom)","export default 'sep,26,2018,17:19:00'"],"sourceRoot":""}